{"version":3,"sources":["../../../src/api/controllers/invoice.controller.js"],"names":["findAll","req","res","next","decode","jwt","query","token","User","findById","user","_id","populate","exec","error","status","json","title","body","invoices","verify","create","invoice","Invoice","name","email","dob","password","save","push","obj","findOne","id","params","then","err","catch","delete","findByIdAndRemove","update","schema","joi","object","keys","string","required","date","validate","value","details","findOneAndUpdate","new"],"mappings":"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","file":"invoice.controller.js","sourcesContent":["import joi from 'joi';\r\nimport Invoice from \"../models/invoice.model\";\r\nimport User from \"../models/user.model\";\r\nimport jwt from 'jsonwebtoken';\r\n\r\n\r\nexport default {\r\n    findAll(req, res , next){\r\n        var decode = jwt.decode(req.query.token);\r\n        User.findById(decode.user._id).populate(\"invoices\").exec(function(error,user){\r\n            if(error){\r\n                res.status(404).json({\r\n                    title:\"not found\",\r\n                    error:error\r\n                })\r\n            }\r\n            res.status(200).json({\r\n               title:'found!',\r\n               body:user.invoices\r\n            })\r\n        })\r\n      // .then(invoices => res.json(invoices))\r\n      // .catch(err => res.status(500).json(err))\r\n    },\r\n\r\n verify(req, res, next){\r\n      jwt.verify(req.query.token, '$&*na340987jkl%#*', function(error, decode){\r\n        if(error){\r\n            return res.status(401).json({\r\n                title:'Not Authenticated!',\r\n                error:error\r\n            })\r\n        }\r\n        next()\r\n      })\r\n    },\r\n    create(req,res){\r\n        // const {name, email, dob, password}=req.body;\r\n        var decode = jwt.decode(req.query.token);\r\n        User.findById(decode.user._id, function(error, user){\r\n            if(error){\r\n                return res.status(500).json({\r\n                    title:'an error occured!',\r\n                    error:error\r\n                })\r\n            }\r\n            var invoice = new Invoice({\r\n            name: req.body.name,\r\n            email:req.body.email,\r\n            dob:req.body.dob,\r\n            password:req.body.password,\r\n            user:user\r\n        })\r\n        invoice.save(function(error, invoice){\r\n            if(error) {\r\n                return res.status(500).json({\r\n                    title:'An error occured!',\r\n                    error:error\r\n                })\r\n            }\r\n            user.invoices.push(invoice)\r\n            user.save()\r\n            res.status(200).json({\r\n                title:'saved invoice',\r\n                obj: invoice\r\n            })\r\n        })\r\n        // .then(invoice => {\r\n        //     return res.status(200).json({\r\n        //         body:invoice\r\n        //     })\r\n        // } \r\n        // .catch(err => res.status(500).json(err))\r\n\r\n         })\r\n        \r\n},\r\n    findOne(req, res){\r\n        let {id} = req.params;\r\n        Invoice.findById(id)\r\n        .then(invoice => {\r\n            if(!invoice){\r\n                return res.status(404).json({err:'invoice could not found'})\r\n            }\r\n            return res.json(invoice);\r\n        })\r\n        .catch(error => res.status(501).json(error))\r\n    },\r\n    delete(req, res){\r\n        let {id} = req.params;\r\n        Invoice.findByIdAndRemove(id)\r\n        .then(invoice => {\r\n            if(!invoice){\r\n                return res.status(404).json({err:'invoice could not be deleted'})\r\n            }\r\n            return res.json(invoice);\r\n        })\r\n        .catch(error => res.status(501).json({\r\n            title:'some error',\r\n            error:error\r\n        }))\r\n    },\r\n    update(req, res){\r\n        let {id}=req.params;\r\n        const {name, email, dob, password}=req.body;\r\n        const schema = joi.object().keys({\r\n            name: joi.string().required(),\r\n            email: joi.string().required(),\r\n            dob:joi.date().required(),\r\n            password:joi.string().required()\r\n        })\r\n        const {error, value}=joi.validate(req.body, schema);\r\n        if(error && error.details){\r\n            return res.status(400).json(error);\r\n        }\r\n        Invoice.findOneAndUpdate({_id: id},value,{new:true})\r\n        .then(invoice => res.json(invoice))\r\n        .catch(err => res.status(501).json(err))\r\n    }\r\n};"]}